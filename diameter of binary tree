class TreeNode:
    def __init__(self, value=0, left=None, right=None):
        self.value = value
        self.left = left
        self.right = right

def calculate_diameter(root):
    def height_and_diameter(node):
        if node is None:
            return 0, 0  # height, diameter
        
        left_height, left_diameter = height_and_diameter(node.left)
        right_height, right_diameter = height_and_diameter(node.right)
        
        # Current height
        current_height = 1 + max(left_height, right_height)
        
        # Current diameter
        current_diameter = max(left_diameter, right_diameter, left_height + right_height)
        
        return current_height, current_diameter
    
    _, diameter = height_and_diameter(root)
    return diameter

# Example usage:
# Creating a sample binary tree
#       1
#      / \
#     2   3
#    / \
#   4   5
root = TreeNode(1, TreeNode(2, TreeNode(4), TreeNode(5)), TreeNode(3))

diameter = calculate_diameter(root)
print("Diameter of the binary tree:", diameter)
